security:
    # Passwort-Verschlüsselung für User Entity
    password_hashers:
        App\Entity\User: 'auto'

    # Wie werden User geladen?
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    # Firewall-Regeln: Wer darf wo zugreifen?
    firewalls:
        # Development Tools (Profiler etc.) bleiben öffentlich
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        # API Docs öffentlich zugänglich machen
        docs:
            pattern: ^/api/docs
            security: false

        # Login-Endpoint ist öffentlich zugänglich
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: api_login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Alle anderen API-Endpoints benötigen JWT-Token
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

    # Zugriffsregeln
    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }  # Login-Endpoint ist öffentlich
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }  # Rest braucht Authentifizierung